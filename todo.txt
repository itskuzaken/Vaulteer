CONTEXT SNAPSHOT
- Stack: Next.js (App Router), React 19, Tailwind CSS v4 (via @tailwindcss/postcss), custom CSS tokens in globals.css.
- Current Layout: Header (site nav + auth) on public pages; dashboard pages each define a layout with:
  - Fixed top header bar (color #bb3031)
  - Sidebar (AdminSidebar / StaffSidebar / VolunteerSidebar) with vertical accordion-like navigation, currently scrollable (overflow-y-auto + no-scrollbar)
  - Content area to the right that also scrolls (whole page scroll tied to viewport)
- Requirements:
  1. Make dashboard navigation (sidebar) non-scrollable (fixed height; does not scroll independently).
  2. Only the right/main panel (content region beneath the dashboard header) scrolls internally.
  3. Upgrade visual polish, hierarchy clarity, typography rhythm, color system consistency, component spacing, and feedback states.
  4. Preserve existing functional behavior and routes (no break to API calls / auth flows).
  5. Improve accessibility & responsiveness without regressing current features.

--------------------------------------------------
PRIMARY OBJECTIVES
1. Introduce a consistent design system (tokens + semantic utility usage).
2. Refactor dashboard layout so:
   - The viewport is a flex (or CSS grid) shell: Fixed header (dashboard), fixed left sidebar (no internal scroll), a single scroll container for main content.
   - Body does not double scroll; only main content scrolls.
3. Elevate UI aesthetics: spacing scale, typography scale, color contrast, interactive affordances, focus states, skeleton/loaders, status badges.
4. Standardize cards, modals, list items, and navigation patterns.
5. Improve perceived performance and clarity (progress indicators, empty states, transitions).
6. Enhance accessibility (tab order, aria, color contrast, focus rings).
7. Reduce ad hoc inline styling; consolidate into Tailwind classes + minimal custom layer.

--------------------------------------------------
SCOPE (WHAT TO TOUCH)
- Dashboard pages (admin/staff/volunteer).
- Sidebars & header bars inside dashboards.
- Reusable components: User cards, applicant cards, modals, filter controls, search bars, post lists, metric tiles.
- Global theme tokens & utility classes.
- Scroll behavior & layout container structure.
- Status/role/tag styling (badges/pills).
- Form styling (inputs, buttons, validation states).
- Feedback UI (notifications, loading placeholders).

--------------------------------------------------
OUT OF SCOPE (UNLESS CRITICAL)
- Backend API changes.
- Auth logic or routing logic semantics.
- Converting to TypeScript.
- Introducing a third-party design framework (e.g., MUI, Chakra).
- Dark mode (can be stubbed for future).

--------------------------------------------------
AUDIT & DISCOVERY (DO FIRST — NO CHANGES)
1. Inventory current color usage (collect all hex values).
2. Inventory spacing anomalies (e.g., px-2 next to p-8 inconsistencies).
3. Identify duplicate modal button styles.
4. Confirm sidebar heights and scroll sources (inspect computed overflow).
5. Capture Lighthouse Accessibility score baseline.
6. List all recurring layout wrappers (for potential consolidation).
7. Note unstyled/placeholder components (Events, Announcement pages).
8. Verify current mobile breakpoints for each dashboard page.

Produce a short audit table (internal) before implementing redesign.

--------------------------------------------------
DESIGN SYSTEM FOUNDATIONS
Define (in one config/tokens file or comment block):
- Color tokens (semantic, not brand hexes):
  --color-brand-primary (#bb3031)
  --color-brand-primary-hover (darker derived)
  --color-surface-base (white)
  --color-surface-alt (red-50 / subtle tint)
  --color-border-default (neutral 200)
  --color-text-strong (neutral 900)
  --color-text-default (neutral 700)
  --color-text-subtle (neutral 500)
  --color-accent-success (green-600), warn, error, info
- Spacing scale: 2,4,6,8,12,16,20,24,32,40 (map to Tailwind’s existing scale).
- Radii: sm (4px), md (8px), lg (16px), pill (9999px).
- Shadows: xs (subtle), sm (cards), md (modals), focus ring style.
- Typography scale:
  Title (text-2xl / 2.25rem leading), Section heading (xl), Card title (lg), Body (sm/base), Meta/caption (xs).
- Motion durations: fast (150ms), base (200ms), emphasized (300ms).
- Elevation layering: header z-40, sidebar z-30, modals z-[1000]+.

--------------------------------------------------
LAYOUT & SCROLL BEHAVIOR REFACTOR
Goal: Sidebar does not scroll; main content region scrolls inside viewport below fixed header.

Implementation Plan:
1. Wrap dashboard page root in a dedicated Layout component if not already (or refactor existing container logic).
2. Apply:
   html, body, #__next { height: 100%; }
   Body for dashboards: overflow: hidden (to prevent dual scroll).
3. Structure:
   <div class="dashboard-shell flex flex-col h-screen">
     <header class="dashboard-header fixed top-0 left-0 right-0 h-16 z-40 ...">...</header>
     <div class="flex flex-row flex-1 pt-16 h-full">
       <aside class="sidebar w-64 shrink-0 h-full border-r ... fixed md:static left-0 top-16 md:top-16 md:h-[calc(100vh-4rem)]">
         (nav content; overflow-y: hidden; internal accordion expands but entire column remains fixed)
       </aside>
       <main class="content flex-1 ml-64 md:ml-64 h-[calc(100vh-4rem)] overflow-y-auto px-4 md:px-6 lg:px-8 pb-10">
         (page-specific scrolling content only)
       </main>
     </div>
   </div>
4. On mobile:
   - Sidebar becomes overlay panel (slide-in) with body scroll lock behind it.
   - When sidebar open: disable main scroll (e.g., add overflow-hidden on body or lock main via aria-hidden).
5. Remove existing per-component top padding hacks (pt-16) and unify in layout.
6. Eliminate internal overflow-y-auto on sidebar; ensure accordion menus rely on max-height transitions (not scrollbars).

Testing:
- Confirm mouse wheel only scrolls main content.
- Resize window; sidebar remains static; content independently scrolls.
- Mobile open/close transitions smooth; no background jank.

--------------------------------------------------
NAVIGATION MENU REDESIGN
Objectives:
- Improve hierarchy (section groups, active states, icons + labels).
- Make expand/collapse transitions smooth (height/opacity/translate).
Changes:
1. Convert lists to semantic <nav><ul><li> pattern with aria-expanded on toggle buttons.
2. Introduce a compact collapsed state for large screens (optional future enhancement; stub class).
3. Active item styling: strong left border (brand color), background subtle tint, bold text.
4. Hover state: subtle surface elevation or tint (not same as active).
5. Add focus-visible ring for keyboard navigation.
6. Replace “Logout” as a destructive secondary group; visually separate with divider.
7. Ensure menu height does not cause scroll; content must wrap gracefully (truncate long labels).
8. Add motion: accordion sub-menu expands with:
   - max-height transition (overflow-hidden)
   - opacity and translateY subtle easing.

--------------------------------------------------
HEADER IMPROVEMENTS
- Add subtle 1px bottom border or shadow to differentiate from content.
- Standardize height to 64px.
- Replace text-only title with logo + title pairing (component).
- Add user profile quick menu (optional placeholder).
- On narrow viewports: integrate a distinct menu trigger (hamburger) with accessible aria-controls and aria-expanded attributes.

--------------------------------------------------
CONTENT AREA ENHANCEMENTS
Apply consistent pattern:
- Page heading zone: Title + optional actions (filters, search) aligned using flex flex-wrap gap-3.
- Card grid standardized: gap-4 sm:gap-6, uniform card padding (p-4 md:p-5), consistent border + shadow.
- Replace gradient-heavy backgrounds with lighter neutral surfaces; reserve gradient or brand tint for callouts.
- Introduce badges for status (active, inactive, pending, rejected) using semantic color tokens.
- Provide skeleton loaders for:
  - User lists (rectangular shimmer placeholders)
  - Applicant lists
  - Posts list
- Empty states: icon + short message + optional CTA or refresh button.

--------------------------------------------------
COMPONENT-SPECIFIC REFACTORS

User / Applicant Cards:
- Unify to single CardUser variant:
  Layout: Avatar (48–56px) + Info stack + Meta row (status pill + date).
- Reduce border noise; use subtle ring on hover/focus.
- Use consistent font weights (name: semibold, email: normal, meta: xs subtle).

Modals:
- Standard max-width (sm / md).
- Vertical rhythm: spacing scale consistent (e.g., header mb-4, sections space-y-3).
- Escape key closes; focus trap; initial focus on close or primary action.
- Add aria-labelledby & aria-describedby references.

Search & Filters:
- Combine search + filter button into a responsive toolbar.
- Provide a compact variant that collapses filters into a sheet on mobile.
- Clear button always aligned right inside input when value exists (absolute positioning or input group).
- Debounced search: add visual loading indicator (spinner inline or subtle animated dot) while query pending.

Forms:
- Standard input sizes, consistent border color (#d1d5db range), focus ring brand color.
- Validation errors: below input, red-600 text-sm + aria-invalid.
- Group related inputs using fieldsets where semantic.

Metrics (Overview Tiles):
- Simplify tile design (remove heavy gradients).
- Use neutral surface + small accent bar or icon circle.
- Provide aria-label summarizing metric.

Notifications / Toast:
- Centralize ephemeral notification system (portal) instead of repeated fixed elements.
- Auto-dismiss after 4–5s, with role="status".

Buttons:
- Define primary (brand solid), secondary (outline), subtle (ghost).
- Danger variant for destructive actions.

--------------------------------------------------
TYPOGRAPHY & SPACING HARMONIZATION
- Replace arbitrary large paddings with consistent sets: container X padding (4 → md:6 → lg:8).
- Introduce a utility class cluster (or just Tailwind tokens) for vertical stacks: space-y-4 for sections, space-y-2 for intra-group.
- Ensure line-clamp for overflowing textual titles where horizontal space is limited.

--------------------------------------------------
COLOR & ACCESSIBILITY
- Validate contrast (WCAG AA) for text on brand red background; adjust text color (white) and ensure state variations darken background.
- Avoid red as neutral background for large surfaces; use red for emphasis/interactive states.
- Status color mapping:
  active → green
  inactive → gray
  pending → amber
  rejected → red
  volunteer/staff/applicant role tags (if shown) → neutral or brand outline variant.

--------------------------------------------------
ANIMATION & FEEDBACK
- Restrict motion to:
  - Sidebar accordion (200ms ease-out)
  - Hover elevation (transition-shadow 150ms)
  - Modal fade + scale (opacity + slight upward translation)
- Avoid excessive gradients and large transitions that may cause layout shift.

--------------------------------------------------
ACCESSIBILITY ACTIONS
- Add skip link (Skip to main content) at top of dashboard page.
- Ensure all interactive elements have focus outline (focus-visible utilities).
- Add aria-live="polite" region for async load states or notifications.
- Provide descriptive alt text for user avatars (fallback alt “User avatar”).
- Validate keyboard navigation sequence: header → sidebar → main content.

--------------------------------------------------
RESPONSIVE BEHAVIOR REFINEMENT
Breakpoints:
- Mobile (<640px): Sidebar hidden (off-canvas), toolbar condenses (icons + minimal labels).
- Tablet (640–1024px): Sidebar shown; content flows; search + filters horizontal.
- Desktop (≥1024px): Full layout; increased padding; multi-column grids for cards (1 → 2 → 3).

--------------------------------------------------
PERFORMANCE / CLEANUP
- Remove duplicate gradient wrappers on every page.
- Avoid repeated inline style objects; rely on class names.
- Defer heavy icon loads (if any) or ensure tree-shaking.
- Consider prefetching key dashboard data after auth success (not mandatory now, just note).

--------------------------------------------------
IMPLEMENTATION PHASING

Phase 1: Audit & Tokens
- Produce token list; update globals.css with CSS variables; document scale.

Phase 2: Layout Shell Refactor
- Implement new fixed header + fixed sidebar + scrollable main.
- Verify no regressions in routing or auth.

Phase 3: Sidebar & Header Redesign
- Apply new nav semantics, transitions, accessibility attributes.

Phase 4: Component Standardization
- Cards, modals, buttons, inputs, metrics, search/filter toolbar.

Phase 5: Status & Feedback
- Add badges, skeletons, empty states, notification system.

Phase 6: Accessibility & QA
- Keyboard navigation, screen reader checks, Lighthouse re-run.

Phase 7: Polish & Documentation
- Update README (design system section + layout usage).
- Create a UI reference (optional: style guide page).

--------------------------------------------------
RISK & MITIGATION
- Scroll breakage (double scroll): enforce overflow-hidden on body; test long content.
- Mobile nav overlay conflicts: z-index layering & scroll lock utility.
- Regression in modals: test stacking order with existing logout confirmation.
- Focus trap misuse: test for ESC + tab loops.

--------------------------------------------------
ACCEPTANCE CRITERIA
1. Dashboard pages: Only main content area scrolls; sidebar stays fixed and non-scrollable.
2. No horizontal scrollbar introduced at common breakpoints.
3. Sidebar accordion accessible via keyboard; visible focus states.
4. Consistent spacing and typography across all primary panels.
5. Card design unified; load states have skeletons instead of abrupt empties.
6. Notifications standardized; no duplicate ad hoc fixed overlays.
7. Color contrast passes WCAG AA (body text ≥ 4.5:1).
8. Lighthouse Accessibility ≥ 90 (baseline improved).
9. All existing routes and actions (approve applicant, edit user, delete user) still function without UI regression.

--------------------------------------------------
DELIVERABLES (WHAT THE AGENT MUST OUTPUT)
1. Summary of audit (pre-change) with discovered inconsistencies.
2. List of new/modified files (layout wrapper, token additions, updated components).
3. Design token definitions (color, spacing, typography) inserted into globals.
4. Refactored layout structure (description + class schemas).
5. Sample updated JSX snippet (for one sidebar + one page header) to illustrate pattern (if allowed).
6. Notes on accessibility enhancements implemented.
7. Post-change Lighthouse Accessibility score (target vs baseline).
8. Follow-up recommendations (optional: dark mode, theme switcher, component library extraction).

--------------------------------------------------
QUALITY CHECKLIST (INTERNAL BEFORE COMPLETION)
- [ ] Body cannot scroll when sidebar overlay is open (mobile).
- [ ] Sidebar does not show scrollbar even with expanded menus.
- [ ] Main area scroll inertia smooth; overscroll effect limited to it.
- [ ] Modals focus trap works; ESC closes.
- [ ] Buttons share consistent radius, font-size, and hover states.
- [ ] Status badges readable and consistent.
- [ ] Loading states implemented for at least users/applicants lists.
- [ ] No console errors regarding layout or DOM nesting.

--------------------------------------------------
POST-IMPLEMENTATION OPTIONAL ENHANCEMENTS (DOCUMENT ONLY)
- Add command palette (quick nav) later.
- Introduce persistent user preferences (collapsed sidebar state).
- Add dark mode toggle binding to CSS variables.
- Extract UI primitives into /components/ui for future scalability.